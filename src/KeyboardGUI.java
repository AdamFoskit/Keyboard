
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author adamf
 */
public final class KeyboardGUI extends javax.swing.JFrame{
 //------------------------- Variables used -------------------------
    boolean capsON = true; //Logic is sound, trust me.
    Color d;               //It was a test name at first, and I don't want to change it on all use-cases
    
    //Main
    public KeyboardGUI() {
        initComponents(); //Autogenerated -> creates my objects for me :)
        textField.addKeyListener(keyListener); //Changes key backgrounds when a key is pressed
        chooser.getSelectionModel().addChangeListener(cListener); //Changes colors of all keys when a color is changed
        d = b0.getBackground(); //Set the inital button color background
    }
    //------------------------- Sets the background color of all the buttons when a new color is selected -------------------------
    ChangeListener cListener = new ChangeListener() {
            @Override
            public void stateChanged(ChangeEvent arg0) {
                d = chooser.getColor();
                if(capsON)
                    capsB.setBackground(d);
                ab.setBackground(d);
                altb.setBackground(d);
                altb2.setBackground(d);
                b0.setBackground(d);
                b1.setBackground(d);
                b2.setBackground(d);
                b3.setBackground(d);
                b4.setBackground(d);
                b5.setBackground(d);
                b6.setBackground(d);
                b7.setBackground(d);
                b8.setBackground(d);
                b9.setBackground(d);
                backSlashB.setBackground(d);
                backspaceB.setBackground(d);
                bb.setBackground(d);
                cBracketb.setBackground(d);
                cb.setBackground(d);
                colonb.setBackground(d);
                commab.setBackground(d);
                controlb.setBackground(d);
                controlb2.setBackground(d);
                dashb.setBackground(d);
                db.setBackground(d);
                eb.setBackground(d);
                enterB.setBackground(d);
                equalsb.setBackground(d);
                //escb.setBackground(d);
                fb.setBackground(d);
                gb.setBackground(d);
                graveb.setBackground(d);
                hb.setBackground(d);
                ib.setBackground(d);
                jb.setBackground(d);
                kb.setBackground(d);
                lb.setBackground(d);
                mb.setBackground(d);
                nb.setBackground(d);
                oBracketb.setBackground(d);
                ob.setBackground(d);
                pb.setBackground(d);
                peroidb.setBackground(d);
                qb.setBackground(d);
                quoteB.setBackground(d);
                rb.setBackground(d);
                sb.setBackground(d);
                shiftb.setBackground(d);
                shiftb2.setBackground(d);
                slashb.setBackground(d);
                spaceB.setBackground(d);
                tabb.setBackground(d);
                tb.setBackground(d);
                ub.setBackground(d);
                vb.setBackground(d);
                wb.setBackground(d);
                winb.setBackground(d);
                winb2.setBackground(d);
                xb.setBackground(d);
                yb.setBackground(d);
                zb.setBackground(d);          
            }
        };
    //------------------------- Keylistener for the Text Field that highlights keys when pressed, and unhighlights when released -------------------------
    KeyListener keyListener = new KeyListener() {
        // TODO Auto-generated method stub
                
            @Override
            public void keyTyped(KeyEvent e) {
                // TODO Auto-generated method stub

            }
            @Override
            public void keyReleased(KeyEvent e) {
                int keyCode = e.getKeyCode();
                
                if (keyCode == KeyEvent.VK_SPACE) spaceB.setBackground(d); //  backspace
                else if (keyCode == KeyEvent.VK_BACK_SPACE) backspaceB.setBackground(d); //  backspace
                else if (keyCode == 9) tabb.setBackground(d);  //  tab
                else if (keyCode == KeyEvent.VK_ENTER) enterB.setBackground(d); //  enter
                else if (keyCode == 16) 
                {
                    shiftb.setBackground(d); //  shift
                    shiftb2.setBackground(d); //  shift
                }
                else if (keyCode == 17) 
                {
                    controlb.setBackground(d); //  ctrl
                    controlb2.setBackground(d); //  ctrl
                }
                else if (keyCode == 18) 
                {
                     altb.setBackground(d); //  alt
                     altb2.setBackground(d); //  alt
                }
                else if (keyCode == 20) 
                {
                    if (capsON)
                    {
                        int colorCheck = d.getBlue() + d.getGreen() + d.getRed();
                        Color temp;
                        if(colorCheck<205)
                        {
                            temp = d.brighter().brighter().brighter().brighter().brighter();
                            if(colorCheck < 54)
                                temp = Color.white;
                        }
                        else
                            temp = d.darker().darker().darker();
                        if (d.getRed() == 204 && d.getBlue() == 0 && d.getGreen() == 0)
                            temp = Color.black;
                        capsB.setBackground(temp); //  caps lock
                        capsB.setSelected(true);
                        capsON = false;
                    }
                    else
                    {
                        capsB.setBackground(d); //  caps lock
                        capsB.setSelected(false);
                        capsON = true;
                    }
                }
                else if (keyCode == 91) oBracketb.setBackground(d); // left window
                else if (keyCode == 92) backSlashB.setBackground(d);  // right window
                else if (keyCode == 111) slashb.setBackground(d);  // divide
                else if (keyCode == KeyEvent.VK_SEMICOLON) colonb.setBackground(d); // semi-colon
                else if (keyCode == KeyEvent.VK_EQUALS) equalsb.setBackground(d);// equal-sign
                else if (keyCode == KeyEvent.VK_COMMA) commab.setBackground(d);  // comma
                else if (keyCode == KeyEvent.VK_MINUS) dashb.setBackground(d);  // dash
                else if (keyCode == KeyEvent.VK_PERIOD) peroidb.setBackground(d); // period
                else if (keyCode == KeyEvent.VK_SLASH) slashb.setBackground(d); // forward slash
                else if (keyCode == 192) graveb.setBackground(d); // grave accent
                else if (keyCode == KeyEvent.VK_OPEN_BRACKET) oBracketb.setBackground(d);  // open bracket
                else if (keyCode == KeyEvent.VK_CLOSE_BRACKET) cBracketb.setBackground(d);  // close bracket
                else if (keyCode == 222) quoteB.setBackground(d); // single quote

                //------------------------------------ All letters ------------------------------------
                else if (keyCode == KeyEvent.VK_A) 
                    ab.setBackground(d);
                else if (keyCode == KeyEvent.VK_B) 
                    bb.setBackground(d);
                else if (keyCode == KeyEvent.VK_C) 
                    cb.setBackground(d);
                else if (keyCode == KeyEvent.VK_D) 
                    db.setBackground(d);
                else if (keyCode == KeyEvent.VK_E) 
                    eb.setBackground(d);
                else if (keyCode == KeyEvent.VK_F) 
                    fb.setBackground(d);
                else if (keyCode == KeyEvent.VK_G) 
                    gb.setBackground(d);
                else if (keyCode == KeyEvent.VK_H) 
                    hb.setBackground(d);
                else if (keyCode == KeyEvent.VK_I) 
                    ib.setBackground(d);
                else if (keyCode == KeyEvent.VK_J) 
                    jb.setBackground(d);
                else if (keyCode == KeyEvent.VK_K) 
                    kb.setBackground(d);
                else if (keyCode == KeyEvent.VK_L) 
                    lb.setBackground(d);
                else if (keyCode == KeyEvent.VK_M) 
                    mb.setBackground(d);
                else if (keyCode == KeyEvent.VK_N) 
                    nb.setBackground(d);
                else if (keyCode == KeyEvent.VK_O) 
                    ob.setBackground(d);
                else if (keyCode == KeyEvent.VK_P) 
                    pb.setBackground(d);
                else if (keyCode == KeyEvent.VK_Q) 
                    qb.setBackground(d);
                else if (keyCode == KeyEvent.VK_R) 
                    rb.setBackground(d);
                else if (keyCode == KeyEvent.VK_S) 
                    sb.setBackground(d);
                else if (keyCode == KeyEvent.VK_T) 
                    tb.setBackground(d);
                else if (keyCode == KeyEvent.VK_U) 
                    ub.setBackground(d);
                else if (keyCode == KeyEvent.VK_V) 
                    vb.setBackground(d);
                else if (keyCode == KeyEvent.VK_W) 
                    wb.setBackground(d);
                else if (keyCode == KeyEvent.VK_X) 
                    xb.setBackground(d);
                else if (keyCode == KeyEvent.VK_Y) 
                    yb.setBackground(d);
                else if (keyCode == KeyEvent.VK_Z) 
                    zb.setBackground(d);
                //------------------------------------ All numbers ------------------------------------
                else if (keyCode == KeyEvent.VK_0) 
                    b0.setBackground(d);
                else if (keyCode == KeyEvent.VK_1) 
                    b1.setBackground(d);
                else if (keyCode == KeyEvent.VK_2) 
                    b2.setBackground(d);
                else if (keyCode == KeyEvent.VK_3) 
                    b3.setBackground(d);
                else if (keyCode == KeyEvent.VK_4) 
                    b4.setBackground(d);
                else if (keyCode == KeyEvent.VK_5) 
                    b5.setBackground(d);
                else if (keyCode == KeyEvent.VK_6) 
                    b6.setBackground(d);
                else if (keyCode == KeyEvent.VK_7) 
                    b7.setBackground(d);
                else if (keyCode == KeyEvent.VK_8) 
                    b8.setBackground(d);
                else if (keyCode == KeyEvent.VK_9) 
                    b9.setBackground(d);
            }
            @Override
            public void keyPressed(KeyEvent e) {
                Color notd;
                int keyCode = e.getKeyCode();
                int colorCheck = d.getBlue() + d.getGreen() + d.getRed();
                if(colorCheck<205)
                {
                    notd = d.brighter().brighter().brighter().brighter().brighter();
                    if(colorCheck < 54)
                        notd = Color.white;
                }
                else
                    notd = d.darker().darker().darker();
                if (d.getRed() <= 204 && d.getRed() > 150 && d.getBlue() < 20 && d.getGreen() < 20)
                    notd = Color.green;
                if (keyCode == KeyEvent.VK_SPACE) spaceB.setBackground(notd); //  backspace
                else if (keyCode == KeyEvent.VK_BACK_SPACE) backspaceB.setBackground(notd); //  backspace
                else if (keyCode == 9) tabb.setBackground(notd);  //  tab
                else if (keyCode == KeyEvent.VK_ENTER) enterB.setBackground(notd); //  enter
                else if (keyCode == 16) 
                {
                    shiftb.setBackground(notd); //  shelse ift
                    shiftb2.setBackground(notd); //  shelse ift
                }
                else if (keyCode == 17) 
                {
                    controlb.setBackground(notd); //  ctrl
                    controlb2.setBackground(notd); //  ctrl
                }
                else if (keyCode == 18) 
                {
                     altb.setBackground(notd); //  alt
                     altb2.setBackground(notd); //  alt
                }
                else if (keyCode == 20) capsB.setBackground(notd); //  caps lock
                else if (keyCode == 91) oBracketb.setBackground(notd); // left window
                else if (keyCode == 92) backSlashB.setBackground(notd);  // right window
                else if (keyCode == 111) slashb.setBackground(notd);  // divide
                else if (keyCode == KeyEvent.VK_SEMICOLON) colonb.setBackground(notd); // semi-colon
                else if (keyCode == KeyEvent.VK_EQUALS) equalsb.setBackground(notd);// equal-sign
                else if (keyCode == KeyEvent.VK_COMMA) commab.setBackground(notd);  // comma
                else if (keyCode == KeyEvent.VK_MINUS) dashb.setBackground(notd);  // dash
                else if (keyCode == KeyEvent.VK_PERIOD) peroidb.setBackground(notd); // period
                else if (keyCode == KeyEvent.VK_SLASH) slashb.setBackground(notd); // forward slash
                else if (keyCode == 192) graveb.setBackground(notd); // grave accent
                else if (keyCode == KeyEvent.VK_OPEN_BRACKET) oBracketb.setBackground(notd);  // open bracket
                else if (keyCode == KeyEvent.VK_BACK_SLASH) backSlashB.setBackground(notd);  // back slash
                else if (keyCode == KeyEvent.VK_CLOSE_BRACKET) cBracketb.setBackground(notd);  // close bracket
                else if (keyCode == 222) quoteB.setBackground(notd); // single quote

                //------------------------------------ All letters ------------------------------------
                else if (keyCode == KeyEvent.VK_A) 
                    ab.setBackground(notd);
                else if (keyCode == KeyEvent.VK_B) 
                    bb.setBackground(notd);
                else if (keyCode == KeyEvent.VK_C) 
                    cb.setBackground(notd);
                else if (keyCode == KeyEvent.VK_D) 
                    db.setBackground(notd);
                else if (keyCode == KeyEvent.VK_E) 
                    eb.setBackground(notd);
                else if (keyCode == KeyEvent.VK_F) 
                    fb.setBackground(notd);
                else if (keyCode == KeyEvent.VK_G) 
                    gb.setBackground(notd);
                else if (keyCode == KeyEvent.VK_H) 
                    hb.setBackground(notd);
                else if (keyCode == KeyEvent.VK_I) 
                    ib.setBackground(notd);
                else if (keyCode == KeyEvent.VK_J) 
                    jb.setBackground(notd);
                else if (keyCode == KeyEvent.VK_K) 
                    kb.setBackground(notd);
                else if (keyCode == KeyEvent.VK_L) 
                    lb.setBackground(notd);
                else if (keyCode == KeyEvent.VK_M) 
                    mb.setBackground(notd);
                else if (keyCode == KeyEvent.VK_N) 
                    nb.setBackground(notd);
                else if (keyCode == KeyEvent.VK_O) 
                    ob.setBackground(notd);
                else if (keyCode == KeyEvent.VK_P) 
                    pb.setBackground(notd);
                else if (keyCode == KeyEvent.VK_Q) 
                    qb.setBackground(notd);
                else if (keyCode == KeyEvent.VK_R) 
                    rb.setBackground(notd);
                else if (keyCode == KeyEvent.VK_S) 
                    sb.setBackground(notd);
                else if (keyCode == KeyEvent.VK_T) 
                    tb.setBackground(notd);
                else if (keyCode == KeyEvent.VK_U) 
                    ub.setBackground(notd);
                else if (keyCode == KeyEvent.VK_V) 
                    vb.setBackground(notd);
                else if (keyCode == KeyEvent.VK_W) 
                    wb.setBackground(notd);
                else if (keyCode == KeyEvent.VK_X) 
                    xb.setBackground(notd);
                else if (keyCode == KeyEvent.VK_Y) 
                    yb.setBackground(notd);
                else if (keyCode == KeyEvent.VK_Z) 
                    zb.setBackground(notd);
                //------------------------------------ All numbers ------------------------------------
                else if (keyCode == KeyEvent.VK_0) 
                    b0.setBackground(notd);
                else if (keyCode == KeyEvent.VK_1) 
                    b1.setBackground(notd);
                else if (keyCode == KeyEvent.VK_2) 
                    b2.setBackground(notd);
                else if (keyCode == KeyEvent.VK_3) 
                    b3.setBackground(notd);
                else if (keyCode == KeyEvent.VK_4) 
                    b4.setBackground(notd);
                else if (keyCode == KeyEvent.VK_5) 
                    b5.setBackground(notd);
                else if (keyCode == KeyEvent.VK_6) 
                    b6.setBackground(notd);
                else if (keyCode == KeyEvent.VK_7) 
                    b7.setBackground(notd);
                else if (keyCode == KeyEvent.VK_8) 
                    b8.setBackground(notd);
                else if (keyCode == KeyEvent.VK_9) 
                    b9.setBackground(notd);
            }
        };
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        graveb = new javax.swing.JButton();
        b3 = new javax.swing.JButton();
        b4 = new javax.swing.JButton();
        b5 = new javax.swing.JButton();
        b6 = new javax.swing.JButton();
        b7 = new javax.swing.JButton();
        b8 = new javax.swing.JButton();
        b9 = new javax.swing.JButton();
        b0 = new javax.swing.JButton();
        dashb = new javax.swing.JButton();
        equalsb = new javax.swing.JButton();
        backspaceB = new javax.swing.JButton();
        tabb = new javax.swing.JButton();
        qb = new javax.swing.JButton();
        wb = new javax.swing.JButton();
        eb = new javax.swing.JButton();
        rb = new javax.swing.JButton();
        tb = new javax.swing.JButton();
        yb = new javax.swing.JButton();
        ub = new javax.swing.JButton();
        ib = new javax.swing.JButton();
        ob = new javax.swing.JButton();
        pb = new javax.swing.JButton();
        oBracketb = new javax.swing.JButton();
        cBracketb = new javax.swing.JButton();
        backSlashB = new javax.swing.JButton();
        ab = new javax.swing.JButton();
        sb = new javax.swing.JButton();
        db = new javax.swing.JButton();
        fb = new javax.swing.JButton();
        gb = new javax.swing.JButton();
        hb = new javax.swing.JButton();
        jb = new javax.swing.JButton();
        kb = new javax.swing.JButton();
        lb = new javax.swing.JButton();
        shiftb = new javax.swing.JButton();
        zb = new javax.swing.JButton();
        xb = new javax.swing.JButton();
        cb = new javax.swing.JButton();
        vb = new javax.swing.JButton();
        bb = new javax.swing.JButton();
        nb = new javax.swing.JButton();
        mb = new javax.swing.JButton();
        commab = new javax.swing.JButton();
        b2 = new javax.swing.JButton();
        b1 = new javax.swing.JButton();
        peroidb = new javax.swing.JButton();
        slashb = new javax.swing.JButton();
        shiftb2 = new javax.swing.JButton();
        controlb = new javax.swing.JButton();
        winb = new javax.swing.JButton();
        altb = new javax.swing.JButton();
        spaceB = new javax.swing.JButton();
        altb2 = new javax.swing.JButton();
        winb2 = new javax.swing.JButton();
        controlb2 = new javax.swing.JButton();
        colonb = new javax.swing.JButton();
        quoteB = new javax.swing.JButton();
        enterB = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        chooser = new javax.swing.JColorChooser();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        textField = new javax.swing.JTextPane();
        Text1 = new javax.swing.JLabel();
        capsB = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Virtual Keyboard - Adam Foskit");
        setAlwaysOnTop(true);
        setType(java.awt.Window.Type.UTILITY);

        graveb.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        graveb.setText("<html>~<br><br>`</html>");
        graveb.setToolTipText("");
        graveb.setActionCommand("");
        graveb.setBorder(null);
        graveb.setFocusable(false);
        graveb.setMinimumSize(new java.awt.Dimension(50, 50));
        graveb.setPreferredSize(new java.awt.Dimension(50, 50));

        b3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        b3.setText("<html>#<br>3</html>");
        b3.setToolTipText("");
        b3.setActionCommand("");
        b3.setBorder(null);
        b3.setFocusable(false);
        b3.setMinimumSize(new java.awt.Dimension(50, 50));
        b3.setPreferredSize(new java.awt.Dimension(50, 50));

        b4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        b4.setText("<html>$<br>4</html>");
        b4.setToolTipText("");
        b4.setActionCommand("");
        b4.setBorder(null);
        b4.setFocusable(false);
        b4.setMinimumSize(new java.awt.Dimension(50, 50));
        b4.setPreferredSize(new java.awt.Dimension(50, 50));

        b5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        b5.setText("<html>%<br>5</html>");
        b5.setActionCommand("");
        b5.setBorder(null);
        b5.setFocusable(false);
        b5.setMinimumSize(new java.awt.Dimension(50, 50));
        b5.setPreferredSize(new java.awt.Dimension(50, 50));

        b6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        b6.setText("<html>^<br>6</html>");
        b6.setActionCommand("");
        b6.setBorder(null);
        b6.setFocusable(false);
        b6.setMinimumSize(new java.awt.Dimension(50, 50));
        b6.setPreferredSize(new java.awt.Dimension(50, 50));

        b7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        b7.setText("<html>&<br>7</html>");
        b7.setActionCommand("");
        b7.setBorder(null);
        b7.setFocusable(false);
        b7.setMinimumSize(new java.awt.Dimension(50, 50));
        b7.setPreferredSize(new java.awt.Dimension(50, 50));

        b8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        b8.setText("<html>*<br>8</html>");
        b8.setActionCommand("");
        b8.setBorder(null);
        b8.setFocusable(false);
        b8.setMinimumSize(new java.awt.Dimension(50, 50));
        b8.setPreferredSize(new java.awt.Dimension(50, 50));

        b9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        b9.setText("<html>(<br>9</html>");
        b9.setActionCommand("");
        b9.setBorder(null);
        b9.setFocusable(false);
        b9.setMinimumSize(new java.awt.Dimension(50, 50));
        b9.setPreferredSize(new java.awt.Dimension(50, 50));

        b0.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        b0.setText("<html>)<br>0</html>");
        b0.setActionCommand("");
        b0.setBorder(null);
        b0.setBorderPainted(false);
        b0.setFocusable(false);
        b0.setMinimumSize(new java.awt.Dimension(50, 50));
        b0.setPreferredSize(new java.awt.Dimension(50, 50));

        dashb.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        dashb.setText("<html>--<br>_</html>");
        dashb.setActionCommand("");
        dashb.setBorder(null);
        dashb.setFocusable(false);
        dashb.setMinimumSize(new java.awt.Dimension(50, 50));
        dashb.setPreferredSize(new java.awt.Dimension(50, 50));

        equalsb.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        equalsb.setText("<html>+<br>=</html>");
        equalsb.setActionCommand("");
        equalsb.setBorder(null);
        equalsb.setFocusable(false);
        equalsb.setMinimumSize(new java.awt.Dimension(50, 50));
        equalsb.setPreferredSize(new java.awt.Dimension(50, 50));

        backspaceB.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        backspaceB.setText("<html>&larr;Backspace</html>");
        backspaceB.setToolTipText("");
        backspaceB.setActionCommand("");
        backspaceB.setBorder(null);
        backspaceB.setFocusable(false);
        backspaceB.setMinimumSize(new java.awt.Dimension(106, 50));
        backspaceB.setPreferredSize(new java.awt.Dimension(50, 50));

        tabb.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tabb.setText("<html>&larr<br>Tab<br>&rarr</html>");
        tabb.setToolTipText("");
        tabb.setActionCommand("");
        tabb.setBorder(null);
        tabb.setFocusable(false);
        tabb.setMinimumSize(new java.awt.Dimension(106, 50));
        tabb.setPreferredSize(new java.awt.Dimension(50, 50));

        qb.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        qb.setText("<html>Q<br>q</html>");
        qb.setActionCommand("");
        qb.setBorder(null);
        qb.setFocusable(false);
        qb.setMinimumSize(new java.awt.Dimension(50, 50));
        qb.setPreferredSize(new java.awt.Dimension(50, 50));

        wb.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        wb.setText("<html>W<br>w</html>");
        wb.setToolTipText("");
        wb.setActionCommand("");
        wb.setBorder(null);
        wb.setFocusable(false);
        wb.setMinimumSize(new java.awt.Dimension(50, 50));
        wb.setPreferredSize(new java.awt.Dimension(50, 50));

        eb.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        eb.setText("<html>E<br>e</html>");
        eb.setActionCommand("");
        eb.setBorder(null);
        eb.setFocusable(false);
        eb.setMinimumSize(new java.awt.Dimension(50, 50));
        eb.setPreferredSize(new java.awt.Dimension(50, 50));

        rb.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rb.setText("<html>R<br>r</html>");
        rb.setActionCommand("");
        rb.setBorder(null);
        rb.setFocusable(false);
        rb.setMinimumSize(new java.awt.Dimension(50, 50));
        rb.setPreferredSize(new java.awt.Dimension(50, 50));

        tb.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tb.setText("<html>T<br>t</html>");
        tb.setActionCommand("");
        tb.setBorder(null);
        tb.setFocusable(false);
        tb.setMinimumSize(new java.awt.Dimension(50, 50));
        tb.setPreferredSize(new java.awt.Dimension(50, 50));

        yb.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        yb.setText("<html>Y<br>y</html>");
        yb.setActionCommand("");
        yb.setBorder(null);
        yb.setFocusable(false);
        yb.setMinimumSize(new java.awt.Dimension(50, 50));
        yb.setPreferredSize(new java.awt.Dimension(50, 50));

        ub.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ub.setText("<html>U<br>u</html>");
        ub.setActionCommand("");
        ub.setBorder(null);
        ub.setFocusable(false);
        ub.setMinimumSize(new java.awt.Dimension(50, 50));
        ub.setPreferredSize(new java.awt.Dimension(50, 50));

        ib.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ib.setText("<html>I<br>i</html>");
        ib.setActionCommand("");
        ib.setBorder(null);
        ib.setFocusable(false);
        ib.setMinimumSize(new java.awt.Dimension(50, 50));
        ib.setPreferredSize(new java.awt.Dimension(50, 50));

        ob.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ob.setText("<html>O<br>o<html>");
        ob.setActionCommand("");
        ob.setBorder(null);
        ob.setFocusable(false);
        ob.setMinimumSize(new java.awt.Dimension(50, 50));
        ob.setPreferredSize(new java.awt.Dimension(50, 50));

        pb.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        pb.setText("<html>P<br>p</html>");
        pb.setActionCommand("");
        pb.setBorder(null);
        pb.setFocusable(false);
        pb.setMinimumSize(new java.awt.Dimension(50, 50));
        pb.setPreferredSize(new java.awt.Dimension(50, 50));

        oBracketb.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        oBracketb.setText("<html>{<br>[</html>");
        oBracketb.setActionCommand("");
        oBracketb.setBorder(null);
        oBracketb.setFocusable(false);
        oBracketb.setMinimumSize(new java.awt.Dimension(50, 50));
        oBracketb.setPreferredSize(new java.awt.Dimension(50, 50));

        cBracketb.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cBracketb.setText("<html>}<br>]</html>");
        cBracketb.setActionCommand("");
        cBracketb.setBorder(null);
        cBracketb.setFocusable(false);
        cBracketb.setMinimumSize(new java.awt.Dimension(50, 50));
        cBracketb.setPreferredSize(new java.awt.Dimension(50, 50));

        backSlashB.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        backSlashB.setText("<html>|<br>\\</html>");
        backSlashB.setActionCommand("");
        backSlashB.setBorder(null);
        backSlashB.setFocusable(false);
        backSlashB.setMinimumSize(new java.awt.Dimension(50, 50));
        backSlashB.setPreferredSize(new java.awt.Dimension(50, 50));

        ab.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ab.setText("<html>A<br>a</html>");
        ab.setActionCommand("");
        ab.setBorder(null);
        ab.setFocusable(false);
        ab.setMinimumSize(new java.awt.Dimension(50, 50));
        ab.setPreferredSize(new java.awt.Dimension(50, 50));

        sb.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        sb.setText("<html>S<br>s</html>");
        sb.setActionCommand("");
        sb.setBorder(null);
        sb.setFocusable(false);
        sb.setMinimumSize(new java.awt.Dimension(50, 50));
        sb.setPreferredSize(new java.awt.Dimension(50, 50));

        db.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        db.setText("<html>D<br>d</html>");
        db.setActionCommand("");
        db.setBorder(null);
        db.setFocusable(false);
        db.setMinimumSize(new java.awt.Dimension(50, 50));
        db.setPreferredSize(new java.awt.Dimension(50, 50));

        fb.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        fb.setText("<html>F<br>f<html>");
        fb.setActionCommand("");
        fb.setBorder(null);
        fb.setFocusable(false);
        fb.setMinimumSize(new java.awt.Dimension(50, 50));
        fb.setPreferredSize(new java.awt.Dimension(50, 50));

        gb.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        gb.setText("<html>G<br>g<html>");
        gb.setToolTipText("");
        gb.setActionCommand("");
        gb.setBorder(null);
        gb.setFocusable(false);
        gb.setMinimumSize(new java.awt.Dimension(50, 50));
        gb.setPreferredSize(new java.awt.Dimension(50, 50));

        hb.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        hb.setText("<html>H<br>h<html>");
        hb.setActionCommand("");
        hb.setBorder(null);
        hb.setFocusable(false);
        hb.setMinimumSize(new java.awt.Dimension(50, 50));
        hb.setPreferredSize(new java.awt.Dimension(50, 50));

        jb.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jb.setText("<html>J<br>j<html>");
        jb.setActionCommand("");
        jb.setBorder(null);
        jb.setFocusable(false);
        jb.setMinimumSize(new java.awt.Dimension(50, 50));
        jb.setPreferredSize(new java.awt.Dimension(50, 50));

        kb.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        kb.setText("<html>K<br>k<html>");
        kb.setActionCommand("");
        kb.setBorder(null);
        kb.setFocusable(false);
        kb.setMinimumSize(new java.awt.Dimension(50, 50));
        kb.setPreferredSize(new java.awt.Dimension(50, 50));

        lb.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lb.setText("<html>L<br>l<html>");
        lb.setActionCommand("");
        lb.setBorder(null);
        lb.setFocusable(false);
        lb.setMinimumSize(new java.awt.Dimension(50, 50));
        lb.setPreferredSize(new java.awt.Dimension(50, 50));

        shiftb.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        shiftb.setText("<html>Shift&uArr;</html>");
        shiftb.setActionCommand("");
        shiftb.setBorder(null);
        shiftb.setFocusable(false);
        shiftb.setMinimumSize(new java.awt.Dimension(106, 50));
        shiftb.setPreferredSize(new java.awt.Dimension(132, 50));

        zb.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        zb.setText("<html>Z<br>z</html>");
        zb.setActionCommand("");
        zb.setBorder(null);
        zb.setFocusable(false);
        zb.setMinimumSize(new java.awt.Dimension(50, 50));
        zb.setPreferredSize(new java.awt.Dimension(50, 50));

        xb.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        xb.setText("<html>X<br>x</html>");
        xb.setActionCommand("");
        xb.setBorder(null);
        xb.setFocusable(false);
        xb.setMinimumSize(new java.awt.Dimension(50, 50));
        xb.setPreferredSize(new java.awt.Dimension(50, 50));

        cb.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cb.setText("<html>C<br>c</html>");
        cb.setActionCommand("");
        cb.setBorder(null);
        cb.setFocusable(false);
        cb.setMinimumSize(new java.awt.Dimension(50, 50));
        cb.setPreferredSize(new java.awt.Dimension(50, 50));

        vb.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        vb.setText("<html>V<br>v</html>");
        vb.setActionCommand("");
        vb.setBorder(null);
        vb.setFocusable(false);
        vb.setMinimumSize(new java.awt.Dimension(50, 50));
        vb.setPreferredSize(new java.awt.Dimension(50, 50));

        bb.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        bb.setText("<html>B<br>b</html>");
        bb.setActionCommand("");
        bb.setBorder(null);
        bb.setFocusable(false);
        bb.setMinimumSize(new java.awt.Dimension(50, 50));
        bb.setPreferredSize(new java.awt.Dimension(50, 50));

        nb.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        nb.setText("<html>N<br>n</html>");
        nb.setActionCommand("");
        nb.setBorder(null);
        nb.setFocusable(false);
        nb.setMinimumSize(new java.awt.Dimension(50, 50));
        nb.setPreferredSize(new java.awt.Dimension(50, 50));

        mb.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        mb.setText("<html>M<br>m</html>");
        mb.setActionCommand("");
        mb.setBorder(null);
        mb.setFocusable(false);
        mb.setMinimumSize(new java.awt.Dimension(50, 50));
        mb.setPreferredSize(new java.awt.Dimension(50, 50));

        commab.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        commab.setText("<html>&lt;<br>,</html>");
        commab.setActionCommand("");
        commab.setBorder(null);
        commab.setFocusable(false);
        commab.setMinimumSize(new java.awt.Dimension(50, 50));
        commab.setPreferredSize(new java.awt.Dimension(50, 50));

        b2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        b2.setText("<html>@<br>2</html>");
        b2.setActionCommand("");
        b2.setBorder(null);
        b2.setFocusable(false);
        b2.setMargin(null);
        b2.setMinimumSize(new java.awt.Dimension(50, 50));
        b2.setPreferredSize(new java.awt.Dimension(50, 50));

        b1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        b1.setText("<html>!<br>1</html>");
        b1.setActionCommand("");
        b1.setBorder(null);
        b1.setFocusable(false);
        b1.setMinimumSize(new java.awt.Dimension(50, 50));
        b1.setPreferredSize(new java.awt.Dimension(50, 50));

        peroidb.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        peroidb.setText("<html>&gt;<br>.</html>");
        peroidb.setActionCommand("");
        peroidb.setBorder(null);
        peroidb.setFocusable(false);
        peroidb.setMinimumSize(new java.awt.Dimension(50, 50));
        peroidb.setPreferredSize(new java.awt.Dimension(50, 50));

        slashb.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        slashb.setText("<html>?<br>/</html>");
        slashb.setActionCommand("");
        slashb.setBorder(null);
        slashb.setFocusable(false);
        slashb.setMinimumSize(new java.awt.Dimension(50, 50));
        slashb.setPreferredSize(new java.awt.Dimension(50, 50));

        shiftb2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        shiftb2.setText("<html>&uArr;Shift</html>");
        shiftb2.setActionCommand("");
        shiftb2.setBorder(null);
        shiftb2.setFocusable(false);
        shiftb2.setMinimumSize(new java.awt.Dimension(50, 50));
        shiftb2.setPreferredSize(new java.awt.Dimension(132, 50));

        controlb.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        controlb.setText("<html>Ctrl<html>");
        controlb.setActionCommand("");
        controlb.setBorder(null);
        controlb.setFocusable(false);
        controlb.setMinimumSize(new java.awt.Dimension(50, 50));
        controlb.setPreferredSize(new java.awt.Dimension(50, 50));

        winb.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        winb.setText("<html>Win<html>");
        winb.setActionCommand("");
        winb.setBorder(null);
        winb.setFocusable(false);
        winb.setMinimumSize(new java.awt.Dimension(50, 50));
        winb.setPreferredSize(new java.awt.Dimension(50, 50));

        altb.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        altb.setText("<html>Alt<html>");
        altb.setActionCommand("");
        altb.setBorder(null);
        altb.setFocusable(false);
        altb.setMinimumSize(new java.awt.Dimension(50, 50));
        altb.setPreferredSize(new java.awt.Dimension(50, 50));

        spaceB.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        spaceB.setText("<html>Space<html>");
        spaceB.setActionCommand("");
        spaceB.setBorder(null);
        spaceB.setFocusable(false);
        spaceB.setMinimumSize(new java.awt.Dimension(50, 50));
        spaceB.setPreferredSize(new java.awt.Dimension(50, 50));

        altb2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        altb2.setText("<html>Alt<html>");
        altb2.setActionCommand("");
        altb2.setBorder(null);
        altb2.setFocusable(false);
        altb2.setMinimumSize(new java.awt.Dimension(50, 50));
        altb2.setPreferredSize(new java.awt.Dimension(50, 50));

        winb2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        winb2.setText("<html>Win<html>");
        winb2.setActionCommand("");
        winb2.setBorder(null);
        winb2.setFocusable(false);
        winb2.setMinimumSize(new java.awt.Dimension(50, 50));
        winb2.setPreferredSize(new java.awt.Dimension(50, 50));

        controlb2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        controlb2.setText("<html>Ctrl<html>");
        controlb2.setActionCommand("");
        controlb2.setBorder(null);
        controlb2.setFocusable(false);
        controlb2.setMinimumSize(new java.awt.Dimension(50, 50));
        controlb2.setPreferredSize(new java.awt.Dimension(50, 50));

        colonb.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        colonb.setText("<html>:<br>;<html>");
        colonb.setActionCommand("");
        colonb.setBorder(null);
        colonb.setFocusable(false);
        colonb.setMinimumSize(new java.awt.Dimension(50, 50));
        colonb.setPreferredSize(new java.awt.Dimension(50, 50));

        quoteB.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        quoteB.setText("<html>\"<br>'<html>");
        quoteB.setActionCommand("");
        quoteB.setBorder(null);
        quoteB.setFocusable(false);
        quoteB.setMinimumSize(new java.awt.Dimension(50, 50));
        quoteB.setPreferredSize(new java.awt.Dimension(50, 50));

        enterB.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        enterB.setText("<html>Enter<br>&#8617<html>");
        enterB.setActionCommand("");
        enterB.setBorder(null);
        enterB.setFocusable(false);
        enterB.setMaximumSize(new java.awt.Dimension(2147483647, 43));
        enterB.setMinimumSize(new java.awt.Dimension(50, 50));
        enterB.setPreferredSize(new java.awt.Dimension(106, 50));

        chooser.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        chooser.setMinimumSize(new java.awt.Dimension(425, 361));
        chooser.setName(""); // NOI18N
        chooser.setNextFocusableComponent(Text1);
        chooser.setOpaque(false);
        chooser.setPreferredSize(new java.awt.Dimension(423, 361));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(chooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(chooser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        chooser.getAccessibleContext().setAccessibleName("");
        chooser.getAccessibleContext().setAccessibleDescription("");

        textField.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        textField.setPreferredSize(new java.awt.Dimension(448, 320));
        jScrollPane1.setViewportView(textField);
        textField.getAccessibleContext().setAccessibleName("textField");

        Text1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        Text1.setText("<html>As you type on your keyboard, the on-screen keyboard will light up!<br>Select a color to change the keyboard's color!<br>Note: Clicking on a button will do nothing<font size = 50>&#9786;</font><html>");
        Text1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(Text1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Text1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 337, Short.MAX_VALUE)
                .addContainerGap())
        );

        capsB.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        capsB.setText("<html>Caps Lock <html>");
        capsB.setMinimumSize(new java.awt.Dimension(106, 50));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(shiftb, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(zb, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(controlb, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(winb, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(altb, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(xb, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cb, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(vb, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(bb, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(nb, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(mb, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(commab, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(peroidb, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(slashb, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(spaceB, javax.swing.GroupLayout.PREFERRED_SIZE, 498, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(altb2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(winb2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(controlb2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(shiftb2, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(capsB, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(ab, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(sb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(db, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(fb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(gb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(hb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(kb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(lb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(colonb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(quoteB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(enterB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(graveb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(b1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(b2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(b3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(b4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(tabb, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(qb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(wb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(eb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(rb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(tb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(yb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(ub, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(ib, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(ob, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(b5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(b6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(b7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(b8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(b9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(b0, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(dashb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(pb, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(oBracketb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(cBracketb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(backSlashB, javax.swing.GroupLayout.DEFAULT_SIZE, 51, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGap(671, 671, 671)
                            .addComponent(equalsb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(backspaceB, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(b2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(b3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(b4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(b5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(b6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(b7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(b8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(b9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(b0, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dashb, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(equalsb, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(b1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(graveb, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(backspaceB, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tabb, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(qb, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(wb, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(eb, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rb, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tb, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(yb, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ub, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ib, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ob, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(pb, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(backSlashB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(oBracketb, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cBracketb, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(quoteB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(enterB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(colonb, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lb, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(db, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(fb, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(gb, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(hb, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jb, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(kb, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ab, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(sb, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(capsB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(shiftb, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(zb, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(xb, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cb, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(vb, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(bb, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(nb, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(mb, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(commab, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(peroidb, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(slashb, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(shiftb2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(spaceB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(altb2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(winb2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(controlb2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(controlb, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(winb, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(altb, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())))
        );

        getAccessibleContext().setAccessibleName("myFrame");

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(KeyboardGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(KeyboardGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(KeyboardGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(KeyboardGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new KeyboardGUI().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JLabel Text1;
    public javax.swing.JButton ab;
    public javax.swing.JButton altb;
    public javax.swing.JButton altb2;
    public javax.swing.JButton b0;
    public javax.swing.JButton b1;
    public javax.swing.JButton b2;
    public javax.swing.JButton b3;
    public javax.swing.JButton b4;
    public javax.swing.JButton b5;
    public javax.swing.JButton b6;
    public javax.swing.JButton b7;
    public javax.swing.JButton b8;
    public javax.swing.JButton b9;
    public javax.swing.JButton backSlashB;
    public javax.swing.JButton backspaceB;
    public javax.swing.JButton bb;
    public javax.swing.JButton cBracketb;
    private javax.swing.JButton capsB;
    public javax.swing.JButton cb;
    public javax.swing.JColorChooser chooser;
    public javax.swing.JButton colonb;
    public javax.swing.JButton commab;
    public javax.swing.JButton controlb;
    public javax.swing.JButton controlb2;
    public javax.swing.JButton dashb;
    public javax.swing.JButton db;
    public javax.swing.JButton eb;
    public javax.swing.JButton enterB;
    public javax.swing.JButton equalsb;
    public javax.swing.JButton fb;
    public javax.swing.JButton gb;
    public javax.swing.JButton graveb;
    public javax.swing.JButton hb;
    public javax.swing.JButton ib;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    public javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JButton jb;
    public javax.swing.JButton kb;
    public javax.swing.JButton lb;
    public javax.swing.JButton mb;
    public javax.swing.JButton nb;
    public javax.swing.JButton oBracketb;
    public javax.swing.JButton ob;
    public javax.swing.JButton pb;
    public javax.swing.JButton peroidb;
    public javax.swing.JButton qb;
    public javax.swing.JButton quoteB;
    public javax.swing.JButton rb;
    public javax.swing.JButton sb;
    public javax.swing.JButton shiftb;
    public javax.swing.JButton shiftb2;
    public javax.swing.JButton slashb;
    public javax.swing.JButton spaceB;
    public javax.swing.JButton tabb;
    public javax.swing.JButton tb;
    public javax.swing.JTextPane textField;
    public javax.swing.JButton ub;
    public javax.swing.JButton vb;
    public javax.swing.JButton wb;
    public javax.swing.JButton winb;
    public javax.swing.JButton winb2;
    public javax.swing.JButton xb;
    public javax.swing.JButton yb;
    public javax.swing.JButton zb;
    // End of variables declaration//GEN-END:variables
}
